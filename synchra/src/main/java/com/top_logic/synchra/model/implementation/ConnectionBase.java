/*
 * SPDX-FileCopyrightText: 2025 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.synchra.model.implementation;

/**
 * Basic interface for {@link #CONNECTION_TYPE} business objects.
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.InterfaceGenerator}
 */
public interface ConnectionBase extends com.top_logic.model.TLObject {

	/**
	 * Name of type <code>Connection</code>
	 */
	String CONNECTION_TYPE = "Connection";

	/**
	 * Part <code>consistsOf</code> of <code>Connection</code>
	 * 
	 * <p>
	 * Declared as <code>syn:Component</code> in configuration.
	 * </p>
	 */
	String CONSISTS_OF_ATTR = "consistsOf";

	/**
	 * Part <code>countries</code> of <code>Connection</code>
	 * 
	 * <p>
	 * Declared as <code>syn:Country</code> in configuration.
	 * </p>
	 */
	String COUNTRIES_ATTR = "countries";

	/**
	 * Part <code>position</code> of <code>Connection</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:String</code> in configuration.
	 * </p>
	 */
	String POSITION_ATTR = "position";

	/**
	 * Part <code>rule</code> of <code>Connection</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:String</code> in configuration.
	 * </p>
	 */
	String RULE_ATTR = "rule";

	/**
	 * Part <code>used</code> of <code>Connection</code>
	 * 
	 * <p>
	 * Declared as <code>syn:ConstructionGroup</code> in configuration.
	 * </p>
	 */
	String USED_ATTR = "used";

	/**
	 * Getter for part {@link #CONSISTS_OF_ATTR}.
	 */
	default com.top_logic.synchra.model.interfaces.Component getConsistsOf() {
		return (com.top_logic.synchra.model.interfaces.Component) tValueByName(CONSISTS_OF_ATTR);
	}

	/**
	 * Setter for part {@link #CONSISTS_OF_ATTR}.
	 */
	default void setConsistsOf(com.top_logic.synchra.model.interfaces.Component newValue) {
		tUpdateByName(CONSISTS_OF_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #COUNTRIES_ATTR}.
	 */
	@SuppressWarnings("unchecked")
	default java.util.Set<? extends com.top_logic.synchra.model.interfaces.Country> getCountries() {
		return (java.util.Set<? extends com.top_logic.synchra.model.interfaces.Country>) tValueByName(COUNTRIES_ATTR);
	}

	/**
	 * Live view of the {@link #COUNTRIES_ATTR} part.
	 * <p>
	 * Changes to this {@link java.util.Collection} change directly the attribute value.
	 * The caller has to take care of the transaction handling.
	 * </p>
	 */
	default java.util.Set<com.top_logic.synchra.model.interfaces.Country> getCountriesModifiable() {
		com.top_logic.model.TLStructuredTypePart attribute = tType().getPart(COUNTRIES_ATTR);
		@SuppressWarnings("unchecked")
		java.util.Set<com.top_logic.synchra.model.interfaces.Country> result = (java.util.Set<com.top_logic.synchra.model.interfaces.Country>) com.top_logic.element.meta.kbbased.WrapperMetaAttributeUtil.getLiveCollection(this, attribute);
		return result;
	}

	/**
	 * Setter for part {@link #COUNTRIES_ATTR}.
	 */
	default void setCountries(java.util.Set<com.top_logic.synchra.model.interfaces.Country> newValue) {
		tUpdateByName(COUNTRIES_ATTR, newValue);
	}

	/**
	 * Adds a value to the {@link #COUNTRIES_ATTR} reference.
	 */
	default void addCountry(com.top_logic.synchra.model.interfaces.Country newValue) {
		tAddByName(COUNTRIES_ATTR, newValue);
	}

	/**
	 * Removes the given value from the {@link #COUNTRIES_ATTR} reference.
	 */
	default void removeCountry(com.top_logic.synchra.model.interfaces.Country oldValue) {
		tRemoveByName(COUNTRIES_ATTR, oldValue);
	}

	/**
	 * Getter for part {@link #POSITION_ATTR}.
	 */
	default String getPosition() {
		return (String) tValueByName(POSITION_ATTR);
	}

	/**
	 * Setter for part {@link #POSITION_ATTR}.
	 */
	default void setPosition(String newValue) {
		tUpdateByName(POSITION_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #RULE_ATTR}.
	 */
	default String getRule() {
		return (String) tValueByName(RULE_ATTR);
	}

	/**
	 * Setter for part {@link #RULE_ATTR}.
	 */
	default void setRule(String newValue) {
		tUpdateByName(RULE_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #USED_ATTR}.
	 */
	default com.top_logic.synchra.model.interfaces.ConstructionGroup getUsed() {
		return (com.top_logic.synchra.model.interfaces.ConstructionGroup) tValueByName(USED_ATTR);
	}

}
