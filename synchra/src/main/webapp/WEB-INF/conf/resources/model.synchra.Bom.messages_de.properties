model.synchra.Bom = Stücklistenmanagement
model.synchra.Bom.AtomicPart = Einzelteil
model.synchra.Bom.AtomicPart.etPicture = Bild
model.synchra.Bom.Cassifier = Ausprägung
model.synchra.Bom.Cassifier.qualifiedName = qualifizierender Name
model.synchra.Bom.Cassifier.selector = Kriterium
model.synchra.Bom.Chapter = Kapitel
model.synchra.Bom.Chapter.defines = Defines
model.synchra.Bom.Chapter.kapPicture = Kap picture
model.synchra.Bom.Chapter.kapVersion = Kap version
model.synchra.Bom.Component = Komponente
model.synchra.Bom.Component.chapter = Chapter
model.synchra.Bom.Component.compIsAffectedByRisk = ist betroffen von Risiko
model.synchra.Bom.Component.componentMayBeDeliveredBy = Komponente kann geliefert werden durch
model.synchra.Bom.Component.description = Description
model.synchra.Bom.Component.hasPotentialVendor = hat möglichen Lieferanten
model.synchra.Bom.Component.isAffectedBy = ist betroffen von Problem
model.synchra.Bom.Component.length = Länge (mm)
model.synchra.Bom.Component.library = gehört zu Bibliothek
model.synchra.Bom.Component.partArt = Teileart
model.synchra.Bom.Component.partName = Artikelnummer
model.synchra.Bom.Component.price = Aktueller Preis
model.synchra.Bom.Component.tooltip = Eine Komponente ist entweder eine Baugruppe oder ein Zusammenbau
model.synchra.Bom.Component.weight = Gewicht (gr)
model.synchra.Bom.Composition = Baugruppe
model.synchra.Bom.Composition.formatedPrice = Formated price
model.synchra.Bom.Composition.parts = definiert über
model.synchra.Bom.Composition.price = aktueller Preis
model.synchra.Bom.Composition.varPrice = Variantenpreis
model.synchra.Bom.Composition.varPrice.tooltip = config -> $config.get(`synchra.Bom:DerivedComposition#classifiers`);\nb->$b.get(`synchra.Bom:Composition#parts`).filter(p->{\n     cond = $p.get(`synchra.Bom:ConstructionPart#codeRule`);\n     condType = $cond.get(`synchra.Bom:ConstructionCondition#type`);\n     condClassifiers = $cond.get(`synchra.Bom:ConstructionCondition#classifiers`);\n     switch{\n         $cond == null: true;\n         $condType == `synchra.Bom:ConditionType#AND`: $config.containsAll($condClassifiers);\n         $condType == `synchra.Bom:ConditionType#OR`: $config.containsSome($condClassifiers);\n         $condType == `synchra.Bom:ConditionType#NOT`: !$config.containsSome($condClassifiers);\n         default: true;\n     }\n    }).get(`synchra.Bom:ConstructionPart#price`).sum()
model.synchra.Bom.Composition.weight = Gewicht
model.synchra.Bom.ConditionType = Verknüpfungsart
model.synchra.Bom.ConditionType.AND = Und
model.synchra.Bom.ConditionType.NOT = Nicht
model.synchra.Bom.ConditionType.OR = Oder
model.synchra.Bom.ConstructionCondition = Einbaubedingung
model.synchra.Bom.ConstructionCondition.classifiers = Ausprägungen
model.synchra.Bom.ConstructionCondition.name = Bezeichnung
model.synchra.Bom.ConstructionCondition.type = Type
model.synchra.Bom.ConstructionPart = Teileverwendung
model.synchra.Bom.ConstructionPart.builds = übergeordnete BG
model.synchra.Bom.ConstructionPart.codeRule = verwenden wenn
model.synchra.Bom.ConstructionPart.fineName = lesbarer Name
model.synchra.Bom.ConstructionPart.implementedBy = realisiert durch
model.synchra.Bom.ConstructionPart.name = Identifizierender Name
model.synchra.Bom.ConstructionPart.numberOfEntities = benötigte Anzahl
model.synchra.Bom.ConstructionPart.price = Preis
model.synchra.Bom.ConstructionPart.priceVariant = Variantenpreis Teileverwendung
model.synchra.Bom.ConstructionPart.probsOfAddedPart = Probleme des Anbauteils
model.synchra.Bom.ConstructionPart.riskOfAddedPart = Risiken des Anbauteils
model.synchra.Bom.ConstructionPart.weight = Gewicht
model.synchra.Bom.DerivedComposition = Variante
model.synchra.Bom.DerivedComposition.classifiers = Ausprägungen
model.synchra.Bom.DerivedComposition.master = Master
model.synchra.Bom.EnumSelector = Auswahlkriterium
model.synchra.Bom.EnumSelector.classifiers = Ausprägungen
model.synchra.Bom.Libraries = Bibliotheken
model.synchra.Bom.Libraries.tooltip = Enthält die Wurzelknoten der Baumstruktur, Definition über die Eigenschaften des Moduls Stücklistenmanagement\n
model.synchra.Bom.Library = Bibliothek
model.synchra.Bom.Library.bibVersion = Version
model.synchra.Bom.LibraryNode = Bibliotheksknoten
model.synchra.Bom.Named = Benannt
model.synchra.Bom.Named.name = Name
model.synchra.Bom.Named.tooltip = Dieser Objekttyp dient dazu, die für die spätere Anzeige von Referenzen nötige Eigenschaft "name" einmal zu definieren. Alle Objekttypen, die diese Eigenschaft später benötigen werden mit "Named" als Untertypen verknüpft
model.synchra.Bom.PartArt = Teileart
model.synchra.Bom.PartArt.partToBePproduced = Fertigungsteil
model.synchra.Bom.PartArt.purchasePart = Kaufteil
model.synchra.Bom.Section = Abschnitt
model.synchra.Bom.Selector = Selector
model.synchra.Bom.Structure = Struktur
model.synchra.Bom.Structure.contents = enthält
model.synchra.Bom.tooltip = Enthält alle Objekttypen für die Stücklisten- und Stammdatenverwaltung.\nEnthält außerdem die Definition der Wurzelknoten für die im Stücklistenmanagement verwendeten Baumdarstellungen.\n\nHighlights der Stücklistenverwaltung\n\u2022	Teilestammdaten: Anlegen unterschiedlicher Teilekataloge mit beliebiger Aufteilung\n\u2022	Teilestammdaten: Definition eines einzelnen Teils incl. Produktbild, Preis und Gewicht\n\u2022	Baugruppen: Definition von Baugruppen\n\u2022	Baugruppen: Berechnung von Gesamtpreis und -gewicht\n\u2022	Produktstruktur: Aufbau beliebiger Produkte aus den bereits definierten Baugruppen als 150%-Stückliste\n\u2022	Produktstruktur: Definition und Anzeige von Variantenstücklisten\n
