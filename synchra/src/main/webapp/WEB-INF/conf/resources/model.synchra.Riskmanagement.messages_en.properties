model.synchra.Riskmanagement = Riskmanagement
model.synchra.Riskmanagement.EventRisk = Event Risk
model.synchra.Riskmanagement.EventRisk.Medium = Medium
model.synchra.Riskmanagement.EventRisk.high = High
model.synchra.Riskmanagement.EventRisk.low = Low
model.synchra.Riskmanagement.EventRisk.veryhigh = Very High
model.synchra.Riskmanagement.EventRisk.verylow = Very Low
model.synchra.Riskmanagement.ExpectedAmountOfLoss = Expected Amount Of Loss
model.synchra.Riskmanagement.ExpectedAmountOfLoss.high = high (between 10.000\u20AC and 100.000\u20AC)
model.synchra.Riskmanagement.ExpectedAmountOfLoss.low = low (<5.000\u20AC)
model.synchra.Riskmanagement.ExpectedAmountOfLoss.medium = medium (between 5.000\u20AC and 10.000\u20AC)
model.synchra.Riskmanagement.ExpectedAmountOfLoss.veryhigh = very high ((>100.000\u20AC)
model.synchra.Riskmanagement.KindOfRiskTask = Kind Of RiskTask
model.synchra.Riskmanagement.KindOfRiskTask.Infrastructure = Infrastructure
model.synchra.Riskmanagement.KindOfRiskTask.Organisational = Organisational
model.synchra.Riskmanagement.KindOfRiskTask.Other = Other
model.synchra.Riskmanagement.KindOfRiskTask.Technical = Tecnical
model.synchra.Riskmanagement.Risk = Risk
model.synchra.Riskmanagement.Risk.colorAsString = Farbe als Wort
model.synchra.Riskmanagement.Risk.colorAsString.tooltip = w -> switch{\n     $w.get(`synchra.Riskmanagement:Risk#probability`) == `synchra.Riskmanagement:EventRisk#high`:"red";\n     $w.get(`synchra.Riskmanagement:Risk#probability`) == `synchra.Riskmanagement:EventRisk#low`:"green";\n     default: "Test";\n     }
model.synchra.Riskmanagement.Risk.description = Risk Description
model.synchra.Riskmanagement.Risk.hasClass = Has class
model.synchra.Riskmanagement.Risk.hasClassAfter = hat Risikoklasse (nach MN)
model.synchra.Riskmanagement.Risk.index = Index
model.synchra.Riskmanagement.Risk.index.tooltip = x->$x.get(`synchra.Riskmanagement:Risk#lossAsNumber`) * $x.get(`synchra.Riskmanagement:Risk#probAsNumber`)
model.synchra.Riskmanagement.Risk.lossAsNumber = Schaden als Zahl
model.synchra.Riskmanagement.Risk.lossAsNumberAfter = Schaden als Zahl (nach MN)
model.synchra.Riskmanagement.Risk.name = Risk Name
model.synchra.Riskmanagement.Risk.probAsNumber = ETW als Zahl
model.synchra.Riskmanagement.Risk.probAsNumberAfter = ETW als Zahl (nach MN)
model.synchra.Riskmanagement.Risk.probability = Probability of Occurrence
model.synchra.Riskmanagement.Risk.probabilityAfter = Risiko hat Eintrittswahrscheinlichkeit (nach MN)
model.synchra.Riskmanagement.Risk.requiresTasks = Requires tasks
model.synchra.Riskmanagement.Risk.riskForComponent = Risk for Components
model.synchra.Riskmanagement.Risk.riskHasexpectedAmountOfLoss = Risk has expected amount of loss
model.synchra.Riskmanagement.Risk.riskHasexpectedAmountOfLossAfter = Risk hasexpected amount of loss after
model.synchra.Riskmanagement.Risk.techTasksTrue = hat technische Maßnahmen
model.synchra.Riskmanagement.RiskClass = Risikoklasse
model.synchra.Riskmanagement.RiskClass.Mistake = Fehler\ 
model.synchra.Riskmanagement.RiskClass.high = hoch
model.synchra.Riskmanagement.RiskClass.low = niedrig
model.synchra.Riskmanagement.RiskClass.middle = mittel
model.synchra.Riskmanagement.StatusOfRiskTask = Status Of Risk Task
model.synchra.Riskmanagement.StatusOfRiskTask.New = New
model.synchra.Riskmanagement.StatusOfRiskTask.evaluated = evaluated
model.synchra.Riskmanagement.StatusOfRiskTask.inEvaluation = in Evaluation
model.synchra.Riskmanagement.TaskForRisks = Task for risk
model.synchra.Riskmanagement.TaskForRisks.kindOfTask = Kind of Task
model.synchra.Riskmanagement.TaskForRisks.name = Name der Risikomaßnahme
model.synchra.Riskmanagement.TaskForRisks.reducesCost = Reduces cost
model.synchra.Riskmanagement.TaskForRisks.reducesProbability = reduziert Eintrittswahrscheinlichkeit
model.synchra.Riskmanagement.TaskForRisks.statusOfRiskTask = Status of risk task
model.synchra.Riskmanagement.TaskForRisks.willBeImplementedby = implemented by
model.synchra.Riskmanagement.tooltip = Highlights Risikomanagement\n\u2022	Umsetzung eines einfachen Prozessablaufs in der Prozessengine.\n\u2022	Realisierung einer einfachen automatischen Entscheidung im Prozessablauf.\n\u2022	Bezug von Risiko zu den Stücklisten\n\u2022	Einbindung von Chart.js Bubblecharts sowohl im Überblick wie auch in der Detailbeschreibung des Risikos.\n\u2022	Tabellarischer Überblick mit Anzeige der zu einem Risiko dazugehörigen Maßnahmen.\n
