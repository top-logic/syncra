<?xml version="1.0" encoding="utf-8" ?>

<model xmlns="http://www.top-logic.com/ns/dynamic-types/6.0">
	<module name="syn">
		<annotations>
			<package-binding
				implementation-package="com.top_logic.synchra.model.implementation"
				interface-package="com.top_logic.synchra.model.interfaces"
			/>
			<singletons>
				<singleton type="TreeRoot"/>
			</singletons>
			<factory value="com.top_logic.synchra.model.ModelFactory"/>
		</annotations>
		<enum name="ActivityState">
			<classifier name="IDEA"/>
			<classifier name="IN_PROGRESS"/>
			<classifier name="DONE"/>
			<classifier name="REJECTED"/>
		</enum>
		<enum name="CompanyStructure">
			<classifier name="AG"/>
			<classifier name="GmbH"/>
			<classifier name="CoKG"/>
		</enum>
		<class name="Activity">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<annotations>
				<instance-presentation icon="css:bi bi-activity"/>
				<form-definition>
					<form>
						<field
							attribute="name"
							fullQualifiedName="syn:Activity#name"
							type="tl.core:String"
						/>
						<field
							attribute="costs"
							fullQualifiedName="syn:Activity#costs"
							type="tl.core:Integer"
						/>
						<field
							attribute="state"
							fullQualifiedName="syn:Activity#state"
							type="syn:ActivityState"
						/>
						<field
							attribute="effectDate"
							fullQualifiedName="syn:Activity#effectDate"
							type="tl.core:Date"
						/>
						<field
							attribute="description"
							fullQualifiedName="syn:Activity#description"
							type="tl.model.wysiwyg:Html"
						/>
						<field
							attribute="valuations"
							fullQualifiedName="syn:Activity#valuations"
							type="kpi:Valuation"
						>
							<annotations>
								<main-properties properties="kpi,valuated,value"/>
							</annotations>
						</field>
					</form>
				</form-definition>
				<reference-display value="radio-inline"/>
			</annotations>
			<attributes>
				<property name="name"
					mandatory="true"
					type="tl.core:String"
				/>
				<property name="description"
					type="tl.model.wysiwyg:Html"
				/>
				<property name="costs"
					type="tl.core:Integer"
				/>
				<property name="activityId"
					type="tl.core:String"
				>
					<annotations>
						<default-value>
							<provider class="com.top_logic.element.structured.util.NumberHandlerDefaultProvider"
								pattern="M-%NUMBER%"
								sequence-name="Massnahmen"
							/>
						</default-value>
						<visibility value="read-only"/>
						<create-visibility value="read-only"/>
					</annotations>
				</property>
				<reference name="valuations"
					composite="true"
					inverse-reference="activity"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="kpi:Valuation"
				/>
				<reference name="state"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="ActivityState"
				>
					<annotations>
						<default-value>
							<classifier value="IDEA"/>
						</default-value>
					</annotations>
				</reference>
				<property name="effectDate"
					type="tl.core:Date"
				/>
			</attributes>
		</class>
		<class name="Company">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<annotations>
				<instance-presentation icon="css:fa-regular fa-building"/>
				<form-definition>
					<form>
						<static-html>
							<content><![CDATA[<p><span style="font-size:36px"><strong>Details Firmenkontakt</strong></span></p>
]]></content>
						</static-html>
						<group>
							<field
								attribute="name"
								fullQualifiedName="syn:Company#name"
								type="tl.core:String"
							/>
							<field
								attribute="structure"
								fullQualifiedName="syn:Company#structure"
								type="syn:CompanyStructure"
							/>
							<label key="dynamic.5dae300d-1547-4871-840b-5455236645ad">
								<en>Base Data</en>
								<de>Basisdaten</de>
							</label>
						</group>
						<group>
							<field
								attribute="phone"
								fullQualifiedName="syn:Company#phone"
								type="tl.core:String"
							/>
							<label key="dynamic.305a3563-965b-402e-a044-c7c861b71154">
								<en>Contact</en>
								<de>Kontakt</de>
							</label>
						</group>
						<other-attributes/>
						<field
							attribute="contact"
							fullQualifiedName="syn:Company#contact"
							type="syn:ContactPerson"
						/>
						<field
							attribute="mayDeliver"
							fullQualifiedName="syn:Company#mayDeliver"
							type="syn:Component"
						/>
					</form>
				</form-definition>
			</annotations>
			<attributes>
				<property name="name"
					mandatory="true"
					type="tl.core:String"
				/>
				<reference name="structure"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="CompanyStructure"
				/>
				<property name="phone"
					type="tl.core:String"
				/>
				<reference name="contact"
					composite="true"
					kind="forwards"
					multiple="true"
					navigate="true"
					ordered="true"
					type="ContactPerson"
				/>
				<property name="adressInformations"
					type="tl.core:String"
				/>
				<reference name="mayDeliver"
					inverse-reference="suppliers"
					kind="backwards"
					multiple="true"
					navigate="true"
					type="Component"
				>
					<annotations>
						<label-position value="hide-label"/>
					</annotations>
				</reference>
			</attributes>
		</class>
		<interface name="Component">
			<generalizations>
				<generalization type="kpi:KpiAware"/>
			</generalizations>
			<annotations>
				<reference-display value="table"/>
				<main-properties properties="name,componentID"/>
			</annotations>
			<attributes>
				<property name="name"
					mandatory="true"
					type="tl.core:String"
				/>
				<reference name="used"
					inverse-reference="consistsOf"
					kind="backwards"
					multiple="true"
					navigate="true"
					type="Connection"
				/>
				<property name="price"
					type="tl.core:Double"
				>
					<annotations>
						<format>
							<currency
								currency="EUR"
								pattern="#0.00 €"
							/>
						</format>
					</annotations>
				</property>
				<reference name="risks"
					inverse-reference="components"
					kind="backwards"
					multiple="true"
					navigate="true"
					type="risk:Risk"
				/>
				<property name="componentID"
					type="tl.core:String"
				/>
				<property name="priceAfterActivities"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[comp -> $comp.get(`syn:Component#price`) + $comp.get(`syn:Component#priceActivityContribution`)
        ]]></expr>
							</query>
						</storage-algorithm>
						<format>
							<currency
								currency="EUR"
								pattern="#0.00 €"
							/>
						</format>
					</annotations>
				</property>
				<reference name="pictures"
					bag="true"
					kind="forwards"
					multiple="true"
					navigate="true"
					ordered="true"
					type="tl.imagegallery:GalleryImage"
				/>
				<property name="weight"
					type="tl.core:Double"
				/>
				<property name="weightAfterActivities"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[comp -> $comp.get(`syn:Component#weight`) + $comp.get(`syn:Component#weightActivityContribution`)
       ]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="priceActivityContribution"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[comp -> $comp.get(`syn:Component#valuations`).filter(
        v -> $v.get(`kpi:Valuation#kpi`).get(`kpi:Kpi#name`).equals("Preis")
        &&   $v.get(`kpi:Valuation#activity`).get(`syn:Activity#state`).equals(resolveModelPart(`syn:ActivityState#DONE`))
        &&   ( $v.get(`kpi:Valuation#activity`).get(`syn:Activity#effectDate`)==null 
              ||  ! $v.get(`kpi:Valuation#activity`).get(`syn:Activity#effectDate`).isDateGreater(today())  
             )
        ).
        map(v -> $v.get(`kpi:Valuation#value`)).sum()]]></expr>
							</query>
						</storage-algorithm>
						<format>
							<currency
								currency="EUR"
								pattern="#0.00 €"
							/>
						</format>
					</annotations>
				</property>
				<property name="weightActivityContribution"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[comp -> $comp.get(`syn:Component#valuations`).filter(
        v -> $v.get(`kpi:AbstractValuation#kpi`).get(`kpi:Kpi#name`).equals("Gewicht")).
        map(v -> $v.get(`kpi:AbstractValuation#value`)).sum()]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="goalPrice"
					type="tl.core:Double"
				>
					<annotations>
						<format>
							<currency
								currency="EUR"
								pattern="#0.00 €"
							/>
						</format>
					</annotations>
				</property>
				<reference name="isAffectedByProblem"
					inverse-reference="isRelatedToComponent"
					kind="backwards"
					multiple="true"
					navigate="true"
					type="prob:Problem"
				/>
				<reference name="suppliers"
					inverse-reference="mayDeliver"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="Company"
				>
					<annotations>
						<label-position value="hide-label"/>
					</annotations>
				</reference>
				<property name="priceActivityPrognose"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[comp -> $comp.get(`syn:Component#valuations`).filter(
        v -> $v.get(`kpi:Valuation#kpi`).get(`kpi:Kpi#name`).equals("Preis")
        &&   (  $v.get(`kpi:Valuation#activity`).get(`syn:Activity#state`).equals(resolveModelPart(`syn:ActivityState#IN_PROGRESS`))
              ||   ( $v.get(`kpi:Valuation#activity`).get(`syn:Activity#state`).equals(resolveModelPart(`syn:ActivityState#DONE`))
                     && $v.get(`kpi:Valuation#activity`).get(`syn:Activity#effectDate`)!=null
                     && $v.get(`kpi:Valuation#activity`).get(`syn:Activity#effectDate`).isDateGreater(today())
                   )
             )
        ).
        map(v -> $v.get(`kpi:Valuation#value`)).sum()]]></expr>
							</query>
						</storage-algorithm>
						<format>
							<currency
								currency="EUR"
								pattern="#0.00 €"
							/>
						</format>
					</annotations>
				</property>
				<property name="prognose"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="comp -> $comp.get(`syn:Component#priceAfterActivities`) + $comp.get(`syn:Component#priceActivityPrognose`)"/>
						</storage-algorithm>
						<format>
							<currency
								currency="EUR"
								pattern="0.00 €"
							/>
						</format>
					</annotations>
				</property>
				<property name="goalGap"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="x->$x.get(`syn:Component#price`) + $x.get(`syn:Component#priceActivityContribution`)-$x.get(`syn:Component#goalPrice`)"/>
						</storage-algorithm>
						<format>
							<currency
								currency="EUR"
								pattern="#0.00 €"
							/>
						</format>
					</annotations>
				</property>
			</attributes>
		</interface>
		<class name="ConstructionGroup">
			<generalizations>
				<generalization type="Component"/>
			</generalizations>
			<annotations>
				<instance-presentation icon="css:fa-solid fa-object-group"/>
				<form-definition>
					<form>
						<static-html>
							<content><![CDATA[<p><span style="font-size:36px"><strong>Details Baugruppe</strong></span></p>
]]></content>
						</static-html>
						<other-attributes/>
						<field
							attribute="name"
							fullQualifiedName="syn:Component#name"
							type="tl.core:String"
						/>
						<field
							attribute="goalPrice"
							fullQualifiedName="syn:Component#goalPrice"
							type="tl.core:Double"
						/>
						<field
							attribute="consistsOf"
							fullQualifiedName="syn:ConstructionGroup#consistsOf"
							type="syn:Connection"
						>
							<annotations>
								<label-position value="hide-label"/>
							</annotations>
						</field>
					</form>
				</form-definition>
			</annotations>
			<attributes>
				<reference name="consistsOf"
					composite="true"
					inverse-reference="used"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="Connection"
				>
					<annotations>
						<constraints>
							<constraint class="com.top_logic.model.util.NoAttributeCycle">
								<additional-observed-references>
									<additional-observed-reference name="consistsOf"
										definition="syn:Connection"
									/>
								</additional-observed-references>
							</constraint>
						</constraints>
					</annotations>
				</reference>
				<property name="price"
					override="true"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="grp -> $grp.get(`syn:ConstructionGroup#consistsOf`).get(`syn:Connection#consistsOf`).get(`syn:Component#price`).sum()"/>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="componentID"
					override="true"
					type="tl.core:String"
				>
					<annotations>
						<default-value>
							<provider class="com.top_logic.element.structured.util.NumberHandlerDefaultProvider"
								pattern="BG-%NUMBER%"
								sequence-name="Komponente"
							/>
						</default-value>
						<create-visibility value="read-only"/>
						<visibility value="read-only"/>
					</annotations>
				</property>
				<property name="weight"
					override="true"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="grp -> $grp.get(`syn:ConstructionGroup#consistsOf`).get(`syn:Connection#consistsOf`).get(`syn:Component#weight`).sum()"/>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="priceAfterActivities"
					override="true"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[grp -> $grp.get(`syn:ConstructionGroup#consistsOf`).get(`syn:Connection#consistsOf`).get(`syn:Component#priceAfterActivities`).sum() + 
         $grp.get(`syn:Component#priceActivityContribution`)]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="weightAfterActivities"
					override="true"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[grp -> $grp.get(`syn:ConstructionGroup#consistsOf`).get(`syn:Connection#consistsOf`).get(`syn:Component#weightAfterActivities`).sum() + 
         $grp.get(`syn:Component#valuations`).filter(
        v -> $v.get(`kpi:AbstractValuation#kpi`).get(`kpi:Kpi#name`).equals("Gewicht")).
        map(v -> $v.get(`kpi:AbstractValuation#value`)).sum()]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="prognose"
					override="true"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[grp -> $grp.get(`syn:ConstructionGroup#consistsOf`).get(`syn:Connection#consistsOf`).get(`syn:Component#prognose`).sum() + 
         $grp.get(`syn:Component#priceActivityPrognose`)]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
			</attributes>
		</class>
		<class name="SinglePart">
			<generalizations>
				<generalization type="Component"/>
			</generalizations>
			<annotations>
				<instance-presentation icon="css:fa-solid fa-diamond"/>
				<form-definition>
					<form>
						<field
							attribute="name"
							fullQualifiedName="syn:Component#name"
							type="tl.core:String"
						/>
						<field
							attribute="componentID"
							fullQualifiedName="syn:SinglePart#componentID"
							type="tl.core:String"
						/>
						<field
							attribute="price"
							fullQualifiedName="syn:Component#price"
							type="tl.core:Double"
						/>
						<field
							attribute="priceAfterActivities"
							fullQualifiedName="syn:Component#priceAfterActivities"
							type="tl.core:Double"
						/>
						<field
							attribute="goalPrice"
							fullQualifiedName="syn:Component#goalPrice"
							type="tl.core:Double"
						/>
						<field
							attribute="goalGap"
							fullQualifiedName="syn:Component#goalGap"
							type="tl.core:Double"
						/>
						<field
							attribute="prognose"
							fullQualifiedName="syn:Component#prognose"
							type="tl.core:Double"
						/>
						<field
							attribute="suppliers"
							fullQualifiedName="syn:Component#suppliers"
							type="syn:Company"
						/>
						<field
							attribute="isAffectedByProblem"
							fullQualifiedName="syn:Component#isAffectedByProblem"
							type="prob:Problem"
						/>
						<field
							attribute="company"
							fullQualifiedName="syn:SinglePart#company"
							type="syn:Company"
						/>
						<field
							attribute="pictures"
							fullQualifiedName="syn:Component#pictures"
							type="tl.imagegallery:GalleryImage"
						/>
						<field
							attribute="risks"
							fullQualifiedName="syn:Component#risks"
							type="risk:Risk"
						/>
						<field
							attribute="material"
							fullQualifiedName="syn:SinglePart#material"
							type="syn:Material"
						/>
						<field
							attribute="weight"
							fullQualifiedName="syn:Component#weight"
							type="tl.core:Double"
						/>
					</form>
				</form-definition>
			</annotations>
			<attributes>
				<reference name="company"
					kind="forwards"
					navigate="true"
					type="Company"
				/>
				<reference name="material"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="Material"
				/>
				<reference name="catalog"
					aggregate="true"
					inverse-reference="parts"
					kind="backwards"
					navigate="true"
					type="PartCatalog"
				/>
				<property name="componentID"
					override="true"
					type="tl.core:String"
				>
					<annotations>
						<default-value>
							<provider class="com.top_logic.element.structured.util.NumberHandlerDefaultProvider"
								pattern="T-%NUMBER%"
								sequence-name="Komponente"
							/>
						</default-value>
						<create-visibility value="read-only"/>
						<visibility value="read-only"/>
					</annotations>
				</property>
			</attributes>
		</class>
		<class name="ComponentNode">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<attributes>
				<reference name="component"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="Component"
				/>
				<reference name="connection"
					kind="forwards"
					navigate="true"
					type="Connection"
				/>
				<reference name="parent"
					inverse-reference="children"
					kind="forwards"
					navigate="true"
					type="ComponentNode"
				/>
				<property name="name"
					type="tl.core:String"
				>
					<annotations>
						<storage-algorithm>
							<query expr="node -> $node.get(`syn:ComponentNode#component`).isEmpty() ?$node.get(`syn:ComponentNode#product`).get(`syn:Product#name`): $node.get(`syn:ComponentNode#component`).get(`syn:Component#name`)"/>
						</storage-algorithm>
					</annotations>
				</property>
				<reference name="product"
					kind="forwards"
					type="Product"
				/>
				<reference name="children"
					inverse-reference="parent"
					kind="backwards"
					multiple="true"
					navigate="true"
					type="ComponentNode"
				/>
				<property name="price"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="node ->  $node.get(`syn:ComponentNode#component`).get(`syn:Component#price`)"/>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="priceAfterActivities"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="node ->  $node.get(`syn:ComponentNode#component`).get(`syn:Component#priceAfterActivities`)"/>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="priceActivityContribution"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="node -> $node.get(`syn:ComponentNode#component`).get(`syn:Component#priceActivityContribution`)"/>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="goalPrice"
					type="tl.core:Float"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[node -> if( $node.get(`syn:ComponentNode#component`).instanceOf(`syn:SinglePart`),
 $node.get(`syn:ComponentNode#component`).get(`syn:SinglePart#goalPrice`),
 $node.get(`syn:ComponentNode#children`).get(`syn:ComponentNode#goalPrice`).sum()
)]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="prognose"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="node ->  $node.get(`syn:ComponentNode#component`).get(`syn:Component#prognose`)"/>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="priceActivityPrognose"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="node -> $node.get(`syn:ComponentNode#component`).get(`syn:Component#priceActivityPrognose`)"/>
						</storage-algorithm>
					</annotations>
				</property>
			</attributes>
		</class>
		<class name="Connection">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<attributes>
				<reference name="used"
					aggregate="true"
					inverse-reference="consistsOf"
					kind="backwards"
					navigate="true"
					type="ConstructionGroup"
				/>
				<reference name="consistsOf"
					inverse-reference="used"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="Component"
				/>
				<property name="position"
					type="tl.core:String"
				/>
			</attributes>
		</class>
		<class name="ContactPerson">
			<generalizations>
				<generalization type="Contacts:PersonContact"/>
			</generalizations>
		</class>
		<class name="Material">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<attributes>
				<property name="name"
					mandatory="true"
					type="tl.core:String"
				/>
			</attributes>
		</class>
		<class name="PartCatalog">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<attributes>
				<property name="name"
					mandatory="true"
					type="tl.core:String"
				/>
				<reference name="parts"
					composite="true"
					inverse-reference="catalog"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="SinglePart"
				/>
				<reference name="partGroups"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="PartsGroup"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[catalog -> 
all(`syn:Company`).map( company -> 
        new(`syn:PartsGroup`, transient: true)
	..set(`syn:PartsGroup#name`, $company.get(`syn:Company#name`))
	..set(`syn:PartsGroup#parts`, 
	         $catalog.get(`syn:PartCatalog#parts`).filter(part -> $part.get(`syn:SinglePart#company`)==$company)
	       )  
)]]></expr>
							</query>
						</storage-algorithm>
						<create-visibility value="hidden"/>
						<visibility value="hidden"/>
					</annotations>
				</reference>
				<reference name="materialGroups"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="PartsGroup"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[catalog -> 
all(`syn:Material`).map( material -> 
        new(`syn:PartsGroup`, transient: true)
	..set(`syn:PartsGroup#name`, $material.get(`syn:Material#name`))
	..set(`syn:PartsGroup#parts`, 
	         $catalog.get(`syn:PartCatalog#parts`).filter(part -> $part.get(`syn:SinglePart#material`).containsElement($material))
	       )  
)
]]></expr>
							</query>
						</storage-algorithm>
						<create-visibility value="hidden"/>
						<visibility value="hidden"/>
					</annotations>
				</reference>
				<reference name="materialCompany"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="PartsGroup"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[catalog -> 
all(`syn:Company`).map( company -> 
    new(`syn:PartsGroup`, transient: true)
	  ..set(`syn:PartsGroup#name`, $company.get(`syn:Company#name`))
	  ..set(`syn:PartsGroup#parts`,      
		  all(`syn:Material`).map( material -> 
	         new(`syn:PartsGroup`, transient: true)
		       ..set(`syn:PartsGroup#name`, $material.get(`syn:Material#name`))
		       ..set(`syn:PartsGroup#parts`, 
		         $catalog.get(`syn:PartCatalog#parts`).filter(
		        	 part -> $part.get(`syn:SinglePart#material`).containsElement($material) && $part.get(`syn:SinglePart#company`)==$company
		        )
		   )  
	    ) 
     )
)]]></expr>
							</query>
						</storage-algorithm>
						<create-visibility value="hidden"/>
						<visibility value="hidden"/>
					</annotations>
				</reference>
			</attributes>
		</class>
		<class name="PartsGroup">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<attributes>
				<property name="name"
					type="tl.core:String"
				/>
				<reference name="parts"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="tl.model:TLObject"
				/>
			</attributes>
		</class>
		<class name="PartsListEntry">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<attributes>
				<reference name="part"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="SinglePart"
				/>
				<reference name="connections"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="Connection"
				/>
				<property name="count"
					type="tl.core:Integer"
				>
					<annotations>
						<storage-algorithm>
							<query expr="entry -> $entry.get(`syn:PartsListEntry#connections`).size()"/>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="costs"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="entry -> $entry.get(`syn:PartsListEntry#singlePrice`) * $entry.get(`syn:PartsListEntry#count`)"/>
						</storage-algorithm>
						<format>
							<currency
								currency="EUR"
								pattern="#0.00 €"
							/>
						</format>
					</annotations>
				</property>
				<property name="singlePrice"
					type="tl.core:Double"
				>
					<annotations>
						<storage-algorithm>
							<query expr="entry -> $entry.get(`syn:PartsListEntry#part`).get(`syn:SinglePart#priceAfterActivities`)"/>
						</storage-algorithm>
						<format>
							<currency
								currency="EUR"
								pattern="#0.00 €"
							/>
						</format>
					</annotations>
				</property>
				<reference name="materials"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="Material"
				>
					<annotations>
						<storage-algorithm>
							<query expr="entry -> $entry.get(`syn:PartsListEntry#part`).get(`syn:SinglePart#material`)"/>
						</storage-algorithm>
					</annotations>
				</reference>
				<reference name="producer"
					kind="forwards"
					navigate="true"
					type="Company"
				>
					<annotations>
						<storage-algorithm>
							<query expr="entry -> $entry.get(`syn:PartsListEntry#part`).get(`syn:SinglePart#company`)"/>
						</storage-algorithm>
					</annotations>
				</reference>
			</attributes>
		</class>
		<class name="Product">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<annotations>
				<form-definition>
					<form>
						<field
							attribute="name"
							fullQualifiedName="syn:Product#name"
							type="tl.core:String"
						/>
					</form>
				</form-definition>
			</annotations>
			<attributes>
				<reference name="buildGroup"
					composite="true"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="ConstructionGroup"
				/>
				<property name="name"
					mandatory="true"
					type="tl.core:String"
				/>
				<property name="productId"
					type="tl.core:String"
				>
					<annotations>
						<default-value>
							<provider class="com.top_logic.element.structured.util.NumberHandlerDefaultProvider"
								pattern="P-%NUMBER%"
								sequence-name="Produkt"
							/>
						</default-value>
						<create-visibility value="read-only"/>
						<visibility value="read-only"/>
					</annotations>
				</property>
			</attributes>
		</class>
		<class name="ProductSelection">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<annotations>
				<form-definition>
					<form>
						<field
							attribute="product"
							fullQualifiedName="syn:ProductSelection#product"
							type="syn:Product"
						/>
						<field
							attribute="referenceDate"
							fullQualifiedName="syn:ProductSelection#referenceDate"
							type="tl.core:DateTime"
						/>
					</form>
				</form-definition>
			</annotations>
			<attributes>
				<reference name="product"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="Product"
				/>
				<property name="rule"
					type="tl.core:String"
				/>
				<property name="referenceDate"
					type="tl.core:DateTime"
				/>
				<reference name="productInRevision"
					kind="forwards"
					navigate="true"
					type="Product"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[sel -> {date = $sel.get(`syn:ProductSelection#referenceDate`);
        revision = $date==null ?  currentRevision() : revisionAt($date);
        $sel.get(`syn:ProductSelection#product`).inRevision($revision);
        }]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</reference>
			</attributes>
		</class>
		<class name="TreeRoot">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
		</class>
	</module>
</model>