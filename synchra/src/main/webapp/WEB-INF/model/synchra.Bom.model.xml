<?xml version="1.0" encoding="utf-8" ?>

<model xmlns="http://www.top-logic.com/ns/dynamic-types/6.0">
	<module name="synchra.Bom">
		<annotations>
			<singletons>
				<singleton name="PRODUCTS"
					type="Libraries"
				/>
				<singleton name="ASSEMBLIES"
					type="Libraries"
				/>
				<singleton name="LIBRARIES"
					type="Libraries"
				/>
			</singletons>
		</annotations>
		<enum name="ConditionType">
			<classifier name="OR"/>
			<classifier name="AND"/>
			<classifier name="NOT"/>
		</enum>
		<enum name="PartArt">
			<classifier name="purchasePart"/>
			<classifier name="partToBePproduced"/>
		</enum>
		<class name="ConstructionPart">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<annotations>
				<instance-presentation icon="colored:tl-icon gear-double"/>
			</annotations>
			<attributes>
				<reference name="implementedBy"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="Component"
				>
					<annotations>
						<constraints>
							<constraint class="com.top_logic.model.util.NoAttributeCycle">
								<additional-observed-references>
									<additional-observed-reference name="builds"
										definition="synchra.Bom:ConstructionPart"
									/>
								</additional-observed-references>
							</constraint>
						</constraints>
					</annotations>
				</reference>
				<property name="numberOfEntities"
					type="tl.core:Integer"
				/>
				<property name="weight"
					type="tl.core:Integer"
				>
					<annotations>
						<storage-algorithm>
							<query expr="tv->$tv.get(`synchra.Bom:ConstructionPart#implementedBy`).get(`synchra.Bom:Component#weight`)*$tv.get(`synchra.Bom:ConstructionPart#numberOfEntities`)"/>
						</storage-algorithm>
					</annotations>
				</property>
				<reference name="builds"
					aggregate="true"
					inverse-reference="parts"
					kind="backwards"
					navigate="true"
					type="Composition"
				/>
				<property name="name"
					type="tl.core:String"
				>
					<annotations>
						<storage-algorithm>
							<query expr="x->$x.get(`synchra.Bom:ConstructionPart#builds`).get(`synchra.Bom:Composition#partName`) + $x.get(`synchra.Bom:ConstructionPart#implementedBy`).get(`synchra.Bom:Component#partName`)"/>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="fineName"
					type="tl.core:String"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr>x-&gt;$x.get(`synchra.Bom:ConstructionPart#implementedBy`).get(`synchra.Bom:Component#name`)   + " Anbau an " +  $x.get(`synchra.Bom:ConstructionPart#builds`).get(`synchra.Bom:Composition#name`)</expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="price"
					type="tl.core:Float"
				>
					<annotations>
						<format>
							<decimal pattern="#0.00"/>
						</format>
						<storage-algorithm>
							<query expr="tv->$tv.get(`synchra.Bom:ConstructionPart#implementedBy`).get(`synchra.Bom:Component#price`)*$tv.get(`synchra.Bom:ConstructionPart#numberOfEntities`)"/>
						</storage-algorithm>
					</annotations>
				</property>
				<reference name="codeRule"
					composite="true"
					kind="forwards"
					navigate="true"
					type="ConstructionCondition"
				/>
				<property name="priceVariant"
					type="tl.core:Float"
				>
					<annotations>
						<storage-algorithm>
							<query expr="tv->$tv.get(`synchra.Bom:ConstructionPart#implementedBy`).get(`synchra.Bom:Component#price`)*$tv.get(`synchra.Bom:ConstructionPart#numberOfEntities`)"/>
						</storage-algorithm>
					</annotations>
				</property>
				<reference name="riskOfAddedPart"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="synchra.Riskmanagement:Risk"
				>
					<annotations>
						<storage-algorithm>
							<query expr="x->$x.get(`synchra.Bom:ConstructionPart#implementedBy`).get(`synchra.Bom:Component#compIsAffectedByRisk`)"/>
						</storage-algorithm>
					</annotations>
				</reference>
				<reference name="probsOfAddedPart"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="synchra.Problemmanagement:Problem"
				>
					<annotations>
						<storage-algorithm>
							<query expr="x->$x.get(`synchra.Bom:ConstructionPart#implementedBy`).get(`synchra.Bom:Component#isAffectedBy`)"/>
						</storage-algorithm>
					</annotations>
				</reference>
			</attributes>
		</class>
		<interface name="LibraryNode">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
		</interface>
		<interface name="Section">
			<generalizations>
				<generalization type="LibraryNode"/>
				<generalization type="Named"/>
			</generalizations>
		</interface>
		<class name="Chapter">
			<generalizations>
				<generalization type="Section"/>
			</generalizations>
			<annotations>
				<instance-presentation icon="colored:tl-icon book-open"/>
			</annotations>
			<attributes>
				<reference name="defines"
					composite="true"
					inverse-reference="chapter"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="Component"
				/>
				<property name="kapVersion"
					type="tl.core:String"
				/>
				<property name="kapPicture"
					type="tl.core:Icon"
				/>
			</attributes>
		</class>
		<interface name="Structure">
			<generalizations>
				<generalization type="LibraryNode"/>
			</generalizations>
			<attributes>
				<reference name="contents"
					composite="true"
					kind="forwards"
					multiple="true"
					navigate="true"
					ordered="true"
					type="Section"
				/>
			</attributes>
		</interface>
		<class name="Libraries">
			<generalizations>
				<generalization type="Structure"/>
			</generalizations>
		</class>
		<class name="Library">
			<generalizations>
				<generalization type="Structure"/>
				<generalization type="Section"/>
			</generalizations>
			<annotations>
				<instance-presentation icon="colored:tl-icon book"/>
			</annotations>
			<attributes>
				<property name="bibVersion"
					type="tl.core:String"
				/>
			</attributes>
		</class>
		<interface name="Named">
			<generalizations>
				<generalization type="tl.model:TLObject"/>
			</generalizations>
			<attributes>
				<property name="name"
					type="tl.core:String"
				/>
			</attributes>
		</interface>
		<class name="Cassifier">
			<generalizations>
				<generalization type="Named"/>
			</generalizations>
			<annotations>
				<id-column value="qualifiedName"/>
				<options-display value="table"/>
				<main-properties properties="selector,name"/>
			</annotations>
			<attributes>
				<property name="qualifiedName"
					type="tl.core:String"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr>x-&gt;$x.get(`synchra.Bom:Cassifier#selector`).get(`synchra.Bom:Selector#name`)+": "+$x.get(`synchra.Bom:Cassifier#name`)</expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
				<reference name="selector"
					aggregate="true"
					inverse-reference="classifiers"
					kind="backwards"
					navigate="true"
					type="EnumSelector"
				/>
			</attributes>
		</class>
		<interface name="Component">
			<generalizations>
				<generalization type="Named"/>
			</generalizations>
			<annotations>
				<instance-presentation icon="colored:tl-icon file-c"/>
			</annotations>
			<attributes>
				<property name="partName"
					mandatory="true"
					type="tl.core:String"
				>
					<annotations>
						<visibility value="read-only"/>
						<create-visibility value="hidden"/>
						<default-value>
							<provider class="com.top_logic.element.structured.util.NumberHandlerDefaultProvider"
								number-pattern="00000000"
								sequence-name="Artikel"
							/>
						</default-value>
					</annotations>
				</property>
				<property name="length"
					type="tl.core:Double"
				/>
				<reference name="chapter"
					aggregate="true"
					inverse-reference="defines"
					kind="backwards"
					navigate="true"
					type="Chapter"
				/>
				<reference name="partArt"
					kind="forwards"
					navigate="true"
					type="PartArt"
				/>
				<reference name="library"
					kind="forwards"
					navigate="true"
					type="Library"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr><![CDATA[x->{
ctx = $x.get(`synchra.Bom:Component#chapter`).container();
if($ctx.instanceOf(`synchra.Bom:Library`),$ctx,null);
}]]></expr>
							</query>
						</storage-algorithm>
					</annotations>
				</reference>
				<property name="weight"
					type="tl.core:Integer"
				/>
				<property name="description"
					type="tl.model.wysiwyg:Html"
				/>
				<property name="price"
					type="tl.core:Float"
				>
					<annotations>
						<format>
							<currency
								currency="EUR"
								pattern="#0.00 â‚¬"
								result-type="double"
							/>
						</format>
					</annotations>
				</property>
				<reference name="isAffectedBy"
					inverse-reference="affects"
					kind="backwards"
					multiple="true"
					navigate="true"
					type="synchra.Problemmanagement:Problem"
				/>
				<reference name="compIsAffectedByRisk"
					inverse-reference="riskForComponent"
					kind="backwards"
					multiple="true"
					navigate="true"
					type="synchra.Riskmanagement:Risk"
				/>
				<reference name="componentMayBeDeliveredBy"
					inverse-reference="providerIsAbleToDeliver"
					kind="backwards"
					multiple="true"
					navigate="true"
					type="synchra.Vendormanagement:Vendor"
				/>
			</attributes>
		</interface>
		<class name="AtomicPart">
			<generalizations>
				<generalization type="Component"/>
			</generalizations>
			<annotations>
				<instance-presentation icon="colored:tl-icon gear"/>
				<form-definition>
					<form>
						<other-attributes/>
						<field
							attribute="name"
							fullQualifiedName="synchra.Bom:Named#name"
							type="tl.core:String"
						/>
						<field
							attribute="price"
							fullQualifiedName="synchra.Bom:Component#price"
							type="tl.core:Float"
						/>
						<field
							attribute="weight"
							fullQualifiedName="synchra.Bom:Component#weight"
							type="tl.core:Integer"
						/>
						<field
							attribute="partName"
							fullQualifiedName="synchra.Bom:Component#partName"
							type="tl.core:String"
						/>
						<field
							attribute="length"
							fullQualifiedName="synchra.Bom:Component#length"
							type="tl.core:Double"
						/>
						<field
							attribute="partArt"
							fullQualifiedName="synchra.Bom:Component#partArt"
							type="synchra.Bom:PartArt"
						/>
						<field
							attribute="etPicture"
							fullQualifiedName="synchra.Bom:AtomicPart#etPicture"
							type="tl.imagegallery:GalleryImage"
						/>
						<field
							attribute="description"
							fullQualifiedName="synchra.Bom:Component#description"
							type="tl.model.wysiwyg:Html"
						/>
						<separator/>
						<field
							attribute="hasPotentialVendor"
							fullQualifiedName="synchra.Bom:Component#hasPotentialVendor"
							type="synchra.Vendormanagement:Vendor"
						/>
						<field
							attribute="compIsAffectedByRisk"
							fullQualifiedName="synchra.Bom:Component#compIsAffectedByRisk"
							type="synchra.Riskmanagement:Risk"
						/>
						<field
							attribute="isAffectedBy"
							fullQualifiedName="synchra.Bom:Component#isAffectedBy"
							type="synchra.Problemmanagement:Problem"
						/>
					</form>
				</form-definition>
			</annotations>
			<attributes>
				<reference name="etPicture"
					bag="true"
					kind="forwards"
					multiple="true"
					navigate="true"
					ordered="true"
					type="tl.imagegallery:GalleryImage"
				/>
			</attributes>
		</class>
		<class name="Composition">
			<generalizations>
				<generalization type="Component"/>
			</generalizations>
			<annotations>
				<instance-presentation icon="colored:tl-icon hierarchy"/>
				<form-definition>
					<form>
						<field
							attribute="partName"
							fullQualifiedName="synchra.Bom:Component#partName"
							type="tl.core:String"
						/>
						<field
							attribute="name"
							fullQualifiedName="synchra.Bom:Named#name"
							type="tl.core:String"
						/>
						<field
							attribute="weight"
							fullQualifiedName="synchra.Bom:Composition#weight"
							type="tl.core:Integer"
						/>
						<field
							attribute="price"
							fullQualifiedName="synchra.Bom:Composition#price"
							type="tl.core:Float"
						/>
						<field
							attribute="parts"
							fullQualifiedName="synchra.Bom:Composition#parts"
							type="synchra.Bom:ConstructionPart"
						/>
						<field
							attribute="description"
							fullQualifiedName="synchra.Bom:Component#description"
							type="tl.model.wysiwyg:Html"
						/>
					</form>
				</form-definition>
			</annotations>
			<attributes>
				<reference name="parts"
					composite="true"
					inverse-reference="builds"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="ConstructionPart"
				>
					<annotations>
						<constraints>
							<constraint class="com.top_logic.model.util.NoAttributeCycle">
								<additional-observed-references>
									<additional-observed-reference name="builds"
										definition="synchra.Bom:ConstructionPart"
									/>
								</additional-observed-references>
							</constraint>
						</constraints>
					</annotations>
				</reference>
				<property name="weight"
					override="true"
					type="tl.core:Integer"
				>
					<annotations>
						<storage-algorithm>
							<query expr="b->$b.get(`synchra.Bom:Composition#parts`).get(`synchra.Bom:ConstructionPart#weight`).sum()"/>
						</storage-algorithm>
					</annotations>
				</property>
				<property name="price"
					override="true"
					type="tl.core:Float"
				>
					<annotations>
						<storage-algorithm>
							<query expr="b->$b.get(`synchra.Bom:Composition#parts`).get(`synchra.Bom:ConstructionPart#price`).sum()"/>
						</storage-algorithm>
						<format>
							<currency
								currency="EUR"
								pattern="#0.00 â‚¬"
							/>
						</format>
					</annotations>
				</property>
				<property name="varPrice"
					type="tl.core:Float"
				/>
				<reference name="formatedPrice"
					kind="forwards"
					type="tl.units:Currency"
				/>
			</attributes>
		</class>
		<class name="ConstructionCondition">
			<generalizations>
				<generalization type="Named"/>
			</generalizations>
			<attributes>
				<reference name="type"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="ConditionType"
				/>
				<reference name="classifiers"
					kind="forwards"
					mandatory="true"
					multiple="true"
					navigate="true"
					ordered="true"
					type="Cassifier"
				/>
				<property name="name"
					override="true"
					type="tl.core:String"
				>
					<annotations>
						<storage-algorithm>
							<query>
								<expr>x-&gt;$x.get(`synchra.Bom:ConstructionCondition#type`) +"("+ $x.get(`synchra.Bom:ConstructionCondition#classifiers`).map(elt-&gt;$elt.get(`synchra.Bom:Cassifier#qualifiedName`)+";").toString() + ")"</expr>
							</query>
						</storage-algorithm>
					</annotations>
				</property>
			</attributes>
		</class>
		<class name="DerivedComposition">
			<generalizations>
				<generalization type="Named"/>
			</generalizations>
			<attributes>
				<reference name="master"
					kind="forwards"
					mandatory="true"
					navigate="true"
					type="Composition"
				/>
				<reference name="classifiers"
					kind="forwards"
					mandatory="true"
					multiple="true"
					navigate="true"
					ordered="true"
					type="Cassifier"
				/>
			</attributes>
		</class>
		<interface name="Selector">
			<generalizations>
				<generalization type="Named"/>
			</generalizations>
		</interface>
		<class name="EnumSelector">
			<generalizations>
				<generalization type="Selector"/>
			</generalizations>
			<annotations>
				<form-definition>
					<form>
						<field
							attribute="name"
							fullQualifiedName="synchra.Bom:Named#name"
							type="tl.core:String"
						/>
						<field
							attribute="classifiers"
							fullQualifiedName="synchra.Bom:EnumSelector#classifiers"
							type="synchra.Bom:Cassifier"
						/>
					</form>
				</form-definition>
			</annotations>
			<attributes>
				<reference name="classifiers"
					composite="true"
					inverse-reference="selector"
					kind="forwards"
					multiple="true"
					navigate="true"
					type="Cassifier"
				>
					<annotations>
						<main-properties properties="name"/>
					</annotations>
				</reference>
			</attributes>
		</class>
	</module>
</model>